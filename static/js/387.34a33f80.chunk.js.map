{"version":3,"file":"static/js/387.34a33f80.chunk.js","mappings":"sRAEaA,EAAOC,EAAAA,GAAAA,GAAH,uIAQJC,EAAaD,EAAAA,GAAAA,EAAH,sGAOVE,EAAYF,EAAAA,GAAAA,IAAH,uFAOTG,EAAUH,EAAAA,GAAAA,EAAH,0HAQPI,EAAcJ,EAAAA,GAAAA,KAAH,sEAKXK,EAAOL,EAAAA,GAAAA,GAAH,0BAIJM,EAAeN,EAAAA,GAAAA,EAAH,0B,SCEzB,MAtCA,WACE,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,mCAAG,WAAOL,GAAP,0FACUM,EAAAA,EAAAA,IAAgBN,GAD1B,gBACRO,EADQ,EACRA,QACRH,EAAcG,GAFE,2CAAH,sDASf,OAJAC,EAAAA,EAAAA,YAAU,WACRH,EAAUL,EACX,GAAE,CAACA,IAECG,GAKH,8BACGA,EAAWM,OAAS,GACnB,SAACX,EAAD,UACGK,EAAWO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,UAACrB,EAAD,YACE,UAACE,EAAD,WAAY,WAASkB,MACrB,UAACjB,EAAD,YACE,SAACC,EAAD,UAAS,eACT,SAACC,EAAD,UAAcgB,SAJPF,EADG,OAWlB,SAACZ,EAAD,UAAc,YAlBX,IAsBV,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Item = styled.li`\nmax-width: 580px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    list-style: none;\n    padding: 10px;\n`;\n\nexport const TextAuthor = styled.p`\nfont-size: 24px;\nfont-weight: 700;\nmargin-top: 15px;\nmargin-bottom: 15px;\n`;\n\nexport const Container = styled.div`\n\ndisplay: flex;\n    flex-direction: column;\n    gap: 10px;\n`;\n\nexport const Content = styled.p`\ndisplay: flex;\n    gap: 15px;\n    font-size: 24px;\n    color: black;\n    margin-bottom: 5px;\n`;\n\nexport const TextContent = styled.span`\ncolor: rgb(44, 43, 43);\nfont-style: italic;\n`;\n\nexport const List = styled.ul`\n\n`;\n\nexport const TextNoReview = styled.p`\n\n`;\n\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieReviews } from \"components/servises/api\";\nimport { Item, List, TextAuthor, Container, TextContent, Content, TextNoReview } from \"./Reviews.styled\";\n\nfunction Reviews() {\n  const { idMovie } = useParams();\n  const [reviewInfo, setReviewInfo] = useState([]);\n\n  const getReview = async (idMovie) => {\n    const { results } = await getMovieReviews(idMovie);\n    setReviewInfo(results);\n  };\n\n  useEffect(() => {\n    getReview(idMovie);\n  }, [idMovie]);\n\n  if (!reviewInfo) {\n    return null;\n  }\n\n  return (\n    <>\n      {reviewInfo.length > 0 ? (\n        <List>\n          {reviewInfo.map(({ id, author, content }) => (\n            <Item key={id}>\n              <TextAuthor>Author: {author}</TextAuthor>\n              <Container>\n                <Content>Content: </Content>\n                <TextContent>{content}</TextContent>\n              </Container>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <TextNoReview>Oops!</TextNoReview>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["Item","styled","TextAuthor","Container","Content","TextContent","List","TextNoReview","idMovie","useParams","useState","reviewInfo","setReviewInfo","getReview","getMovieReviews","results","useEffect","length","map","id","author","content"],"sourceRoot":""}